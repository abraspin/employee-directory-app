{"version":3,"sources":["components/HeaderBar/index.js","utils/API.js","components/UserCard/index.js","utils/useSortableData.js","components/UserTable/index.js","components/SearchBox/index.js","App.js","index.js"],"names":["HeaderBar","title","icon","className","getUsers","resultsQty","a","axios","get","UserCard","props","name","email","phone","picture","src","alt","useSortableData","items","config","React","useState","sortConfig","setSortConfig","sortedItems","useMemo","sortableItems","console","log","sort","b","key","direction","requestSort","UserTable","userList","getClassNamesFor","undefined","type","onClick","map","user","SearchBox","placeholder","searchHandler","valueField","setValueField","value","onChange","event","target","App","setUserList","employeeDirectory","setEmployeeDirectory","useEffect","API","then","res","employeesArray","i","data","results","length","employee","first","last","medium","push","searchTerm","filteredArray","filter","toLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.33a9f3fb.chunk.js","sourcesContent":["import React from \"react\";\r\n// import \"./style.css\";\r\n\r\nfunction HeaderBar({ title, icon }) {\r\n  return (\r\n    <div>\r\n      <div className=\"row bg-dark  \">\r\n        <h1 className=\"mx-auto text-light\">\r\n          {\" \"}\r\n          {title}\r\n          <span>\r\n            {\" \"}\r\n            <i className={icon} />\r\n          </span>\r\n        </h1>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HeaderBar;\r\n","import axios from \"axios\";\nconst BASEURL = \"https://randomuser.me/api/?nat=us&inc=name,email,picture,phone&results=\";\n\nexport default {\n  getUsers: async function (resultsQty) {\n    return await axios.get(BASEURL + resultsQty);\n  },\n};\n","import React from \"react\";\r\n// import \"./style.css\";\r\n\r\nfunction UserCard(props) {\r\n  const { name, email, phone, picture } = props;\r\n  return (\r\n    <tr>\r\n      <td>\r\n        <img src={picture} alt={name} />\r\n      </td>\r\n      <td>{name}</td>\r\n      <td>{email}</td>\r\n      <td>{phone}</td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nexport default UserCard;\r\n","import React from \"react\";\r\n\r\n// custom hook used to handle sort requests\r\nconst useSortableData = (items, config = null) => {\r\n  // sortConfig state is an object with keys fieldName and direction (asc vs des)\r\n  const [sortConfig, setSortConfig] = React.useState(config);\r\n\r\n  // memoize the sort operation so it does not have to re-sort every render...what's the difference?\r\n  const sortedItems = React.useMemo(() => {\r\n    // copy the array because array.sort will modify the original array\r\n    let sortableItems = [...items];\r\n    console.log(\"ðŸš€------ ~ file: index.js ~ line 15 ~ //sortedItems ~ sortableItems\", sortableItems);\r\n\r\n    // if no sort config has been set, return the array unchanged\r\n    if (sortConfig !== null) {\r\n      sortableItems.sort((a, b) => {\r\n        //  comparing key (thingToSort) value from each\r\n        if (a[sortConfig.key] < b[sortConfig.key]) {\r\n          // If it's already ascending and direction is ascending, return -1 (aka a is smaller than b)\r\n          return sortConfig.direction === \"ascending\" ? -1 : 1;\r\n        }\r\n        if (a[sortConfig.key] > b[sortConfig.key]) {\r\n          return sortConfig.direction === \"ascending\" ? 1 : -1;\r\n        }\r\n        return 0;\r\n      });\r\n    }\r\n    return sortableItems;\r\n  }, [items, sortConfig]);\r\n\r\n  // this is called when the sort is requested by clicking table header\r\n  const requestSort = (key) => {\r\n    console.log(\"ðŸš€ ~ file: index.js ~ line 50 ~ requestSort ~ key\", key);\r\n    let direction = \"ascending\";\r\n    // if sortconfig exists AND the thingToSearch matches the requesting thing AND direction is ascending, THEN set to descending (flip it)\r\n    if (sortConfig && sortConfig.key === key && sortConfig.direction === \"ascending\") {\r\n      console.log(\"I flipped to descending!\");\r\n      direction = \"descending\";\r\n    } else {\r\n      direction = \"ascending\";\r\n    }\r\n    setSortConfig({ key, direction });\r\n    console.log(\"I just tried to setSortConfig to: \", sortConfig);\r\n  };\r\n\r\n  // const searchHandler = (searchTerm) => {\r\n  //   let searchableItems = [...items];\r\n  //   console.log(\"ðŸš€ ~ file: App.js ~ line 18 ~ App ~ searchTerm\", searchTerm);\r\n  //   // event.preventDefault();\r\n  //   // setSearchTerm(searchTerm);\r\n  //   let searchedItems = [];\r\n  //   // let employeeDataSomething = [];\r\n  //   for (let i = 0; i < searchableItems.length; i++) {\r\n  //     if (searchableItems[i].name.indexOf(searchTerm) > -1) {\r\n  //       searchedItems.push(searchableItems[i]);\r\n  //     }\r\n  //   }\r\n  //   return searchedItems;\r\n  // };\r\n\r\n  return { items: sortedItems, requestSort, sortConfig /*searchHandler */ };\r\n};\r\n\r\nexport default useSortableData;\r\n","import React from \"react\";\r\nimport UserCard from \"../UserCard\";\r\n// import SearchBox from \"../SearchBox\";\r\nimport useSortableData from \"../../utils/useSortableData\";\r\n\r\nconst UserTable = (props) => {\r\n  const { items, requestSort, sortConfig /*searchHandler */ } = useSortableData(props.userList);\r\n  const getClassNamesFor = (name) => {\r\n    if (!sortConfig) {\r\n      return;\r\n    }\r\n    return sortConfig.key === name ? sortConfig.direction : undefined;\r\n  };\r\n\r\n  // const [searchTerm, setSearchTerm] = React.useState();\r\n  // const [userList, setUserList] = React.useState([]);\r\n\r\n  // $(\".searchBox\").value = \"\";\r\n  // function searchHandler(searchTerm) {\r\n  //   console.log(\"ðŸš€ ~ file: App.js ~ line 18 ~ App ~ searchTerm\", searchTerm);\r\n  //   // event.preventDefault();\r\n  //   // setSearchTerm(searchTerm);\r\n  //   if (!searchTerm) {\r\n  //     setUserList(props.userList);\r\n  //   } else {\r\n  //     let employeeDataSomething = [];\r\n  //     for (let i = 0; i < userList.length; i++) {\r\n  //       if (userList[i].name.indexOf(searchTerm) > -1) {\r\n  //         employeeDataSomething.push(userList[i]);\r\n  //       }\r\n  //     }\r\n  //     // setUserList(employeeDataSomething);\r\n  //     items = employeeDataSomething;\r\n  //   }\r\n  // }\r\n\r\n  return (\r\n    <div>\r\n      {/* <div className=\"row bg-dark\">\r\n        <div className=\"col md-8\">\r\n          <h3 className=\"text-secondary mx-auto py-4 px-4\">Click on the column header to sort users</h3>\r\n        </div>\r\n        <div className=\"col md-4\">\r\n          <h3 className=\"text-secondary mx-auto py-4 px-2\">\r\n            Or search by name (table method): <SearchBox placeholder=\"enter name...\" searchHandler={searchHandler}></SearchBox>\r\n          </h3>\r\n        </div>\r\n      </div> */}\r\n\r\n      <table className=\"table table-striped table-bordered text-center \">\r\n        <thead>\r\n          <tr>\r\n            <th>User</th>\r\n            <th>\r\n              <button type=\"button\" onClick={() => requestSort(\"name\")} className={getClassNamesFor(\"name\")}>\r\n                Name\r\n              </button>\r\n            </th>\r\n            <th>\r\n              <button type=\"button\" onClick={() => requestSort(\"email\")} className={getClassNamesFor(\"email\")}>\r\n                Email\r\n              </button>\r\n            </th>\r\n            <th>Phone</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {items.map((user) => {\r\n            return <UserCard name={user.name} email={user.email} phone={user.phone} picture={user.picture} />;\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserTable;\r\n","import React from \"react\";\r\n// import \"./Searchbox.css\";\r\n\r\nconst SearchBox = ({ placeholder, searchHandler }) => {\r\n  const [valueField, setValueField] = React.useState(\"\");\r\n\r\n  return (\r\n    <input\r\n      value={valueField}\r\n      className=\"searchBox\"\r\n      type=\"search\"\r\n      placeholder={placeholder}\r\n      onChange={(event) => {\r\n        setValueField(event.target.value);\r\n        searchHandler(valueField);\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","// import logo from \"./logo.svg\";\nimport \"./App.css\";\n// import UserCard from \"./components/UserCard\";\nimport HeaderBar from \"./components/HeaderBar\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport API from \"./utils/API.js\";\nimport React, { useEffect, useState } from \"react\";\nimport UserTable from \"./components/UserTable/\";\nimport SearchBox from \"./components/SearchBox/\";\n\nfunction App() {\n  const [userList, setUserList] = useState([]);\n  const [employeeDirectory, setEmployeeDirectory] = useState();\n\n  function searchHandler(searchTerm) {\n    ///////////////////////////////////////////////////////////////////////////////////////\n    const filteredArray = employeeDirectory.filter((a) => a.name.toLowerCase().includes(searchTerm));\n    setUserList(filteredArray);\n    ///////////////////////////////////////////////////////////////////////////////////////\n\n    // let arrayToFilter = [...employeeDirectory];\n    // let filteredArray = [];\n    // for (let i = 0; i < arrayToFilter.length; i++) {\n    //   if (arrayToFilter[i].name.toLowerCase().indexOf(searchTerm.toLowerCase()) > -1) {\n    //     filteredArray.push(arrayToFilter[i]);\n    //   }\n    // }\n    // setUserList(arrayToFilter);\n    ///////////////////////////////////////////////////////////////////////////////////////\n  }\n\n  //Query randomuser API and create a new array with just the key/value pairs we want\n  useEffect(() => {\n    API.getUsers(20).then((res) => {\n      let employeesArray = [];\n      for (let i = 0; i < res.data.results.length; i++) {\n        let employee = {\n          name: res.data.results[i].name.first + \" \" + res.data.results[i].name.last,\n          email: res.data.results[i].email,\n          phone: res.data.results[i].phone,\n          picture: res.data.results[i].picture.medium,\n        };\n        employeesArray.push(employee);\n      }\n      setUserList(employeesArray);\n      setEmployeeDirectory(employeesArray);\n    });\n  }, []);\n\n  return (\n    <div>\n      <header>\n        <HeaderBar title=\"Employee Directory\" icon=\"fas fa-user\"></HeaderBar>\n        <div className=\"row bg-dark\">\n          <div className=\"col md-8\">\n            <h3 className=\"text-secondary mx-auto py-4 px-4\">Click on the column header to sort users</h3>\n          </div>\n          <div className=\"col md-4\">\n            <h3 className=\"text-secondary mx-auto py-4 px-2\">\n              Or search by name: <SearchBox placeholder=\"enter name...\" searchHandler={searchHandler}></SearchBox>\n            </h3>\n          </div>\n        </div>\n      </header>\n      <section>\n        <UserTable userList={userList}></UserTable>\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n","// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import './index.css';\n// import App from './App';\n// import reportWebVitals from './reportWebVitals';\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\n// // If you want to start measuring performance in your app, pass a function\n// // to log results (for example: reportWebVitals(console.log))\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}